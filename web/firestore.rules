rules_version = '2';

// Firestore Security Rules for Sankalp Platform
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if user is government (you can customize this)
    function isGovernment() {
      return isAuthenticated() && 
             (request.auth.token.email.matches('.*@gov\\..*') || 
              request.auth.token.email.matches('.*@government\\..*') ||
              request.auth.uid in ['government-admin-uid-1', 'government-admin-uid-2']);
    }
    
    // NGO Image Submissions
    match /ngo_image_submissions/{submissionId} {
      // NGOs can create their own submissions
      allow create: if isAuthenticated();
      
      // NGOs can read their own submissions, Government can read all
      allow read: if isAuthenticated() && 
                     (resource.data.ngoUid == request.auth.uid || isGovernment());
      
      // Only government can update (approve/reject)
      allow update: if isGovernment();
      
      // NGOs can delete their own pending submissions
      allow delete: if isAuthenticated() && 
                       resource.data.ngoUid == request.auth.uid && 
                       resource.data.status == 'pending';
    }
    
    // NGO Profiles
    match /ngo_profiles/{profileId} {
      // Anyone can read NGO profiles (for leaderboard and donations)
      allow read: if true;

      // Anyone authenticated can create NGO profiles (for sample data)
      allow create: if isAuthenticated();

      // NGOs can update their own profiles, Government can update any (for points)
      allow update: if isAuthenticated() &&
                       (resource.data.uid == request.auth.uid || isGovernment());

      // Only the NGO can delete their own profile
      allow delete: if isAuthenticated() && resource.data.uid == request.auth.uid;
    }

    // Donations Collection
    match /donations/{donationId} {
      // Anyone can read donations (for transparency)
      allow read: if true;

      // Authenticated users can create donations
      allow create: if isAuthenticated();

      // Only donor or government can update
      allow update: if isAuthenticated() &&
                       (resource.data.donorUid == request.auth.uid || isGovernment());

      // Only donor can delete their own donations
      allow delete: if isAuthenticated() && resource.data.donorUid == request.auth.uid;
    }

    // NGO Spendings Collection
    match /ngo_spendings/{spendingId} {
      // Anyone can read spendings (for transparency)
      allow read: if true;

      // NGOs can create their own spending records
      allow create: if isAuthenticated() && resource.data.ngoUid == request.auth.uid;

      // NGOs can update their own spendings, Government can update any
      allow update: if isAuthenticated() &&
                       (resource.data.ngoUid == request.auth.uid || isGovernment());

      // Only the NGO can delete their own spending records
      allow delete: if isAuthenticated() && resource.data.ngoUid == request.auth.uid;
    }
    
    // Issues (Public reporting)
    match /issues/{issueId} {
      // Anyone authenticated can create issues
      allow create: if isAuthenticated();
      
      // Anyone can read issues (public visibility)
      allow read: if true;
      
      // Issue reporters and government can update
      allow update: if isAuthenticated() && 
                       (resource.data.reporterUid == request.auth.uid || isGovernment());
      
      // Only issue reporters can delete their own issues
      allow delete: if isAuthenticated() && resource.data.reporterUid == request.auth.uid;
    }
    
    // User Profiles
    match /users/{userId} {
      // Users can read and write their own profiles
      allow read, write: if isAuthenticated() && userId == request.auth.uid;
      
      // Government can read all user profiles
      allow read: if isGovernment();
    }
    
    // School Data
    match /schools/{schoolId} {
      // Authenticated users can read school data
      allow read: if isAuthenticated();
      
      // School admins and government can write
      allow write: if isAuthenticated();
    }
    
    // School Meals
    match /schoolMeals/{mealId} {
      // Authenticated users can read and write meal data
      allow read, write: if isAuthenticated();
    }
    
    // BMI Records
    match /bmiRecords/{recordId} {
      // Authenticated users can read and write BMI records
      allow read, write: if isAuthenticated();
    }
    
    // Volunteers
    match /volunteers/{volunteerId} {
      // Anyone can read volunteer profiles (for leaderboard)
      allow read: if true;
      
      // Volunteers can create and update their own profiles
      allow create, update: if isAuthenticated() && resource.data.uid == request.auth.uid;
      
      // Government can update volunteer data
      allow update: if isGovernment();
    }
    
    // Default rule - allow authenticated users to read/write their own data
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}
